services:
  # code:
  #   build: .
  #     # context: .
  #     # dockerfile: C:\Users\ASUS\Desktop\Education\Year 2\Semester 2\Web Dev\week6\DockerFIle
  #     # dockerfile: DockerFile
  #   container_name: web-page
  #   ports:
  #     - '3000:80'
  #   volumes:
  #     - .:/var/www/html/
  #   depends_on:
  #     - database
  #   networks:
  #     - mynetwork
  web:
    # build: .
    build:
      context: .
      dockerfile: C:\Users\ASUS\Desktop\Education\Year 2\Semester 2\Web Dev\week6\DockerFIle
    container_name: web-page
    ports:
      - '${PORT:-3000}:80'
    volumes:
      - .:/var/www/html/
    depends_on:
      - database
    environment:
      - DATABASE_HOST=database
      - DATABASE_USER=${MYSQL_USER:-week6}
      - DATABASE_PASSWORD=${MYSQL_PASSWORD:-123456}
      - DATABASE_NAME=${MYSQL_DATABASE:-week6-database}
    networks:
      - mynetwork

  database:
    image: mysql:latest
    container_name: database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-week7-database}
      MYSQL_USER: ${MYSQL_USER:-week7}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-123456}
    volumes:
      - sqldb:/var/lib/mysql
    networks:
      - mynetwork

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: week7-phpmyadmin
    restart: always
    environment:
      PMA_HOST: 'database'
      PMA_PORT: '3306'
    ports:
      - "8080:80"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  sqldb: